\begin{Verbatim}[commandchars=\\\{\}]
\PYGfriendly{c+c1}{// \PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}}

\PYGfriendly{c+c1}{// == Includes ==}
\PYGfriendly{c+cp}{\PYGfriendlyZsh{}include \PYGfriendlyZlt{}stdio.h\PYGfriendlyZgt{}}
\PYGfriendly{c+cp}{\PYGfriendlyZsh{}include \PYGfriendlyZlt{}stdlib.h\PYGfriendlyZgt{}}
\PYGfriendly{c+cp}{\PYGfriendlyZsh{}include \PYGfriendlyZlt{}stm32f0xx.h\PYGfriendlyZgt{}}
\PYGfriendly{c+cp}{\PYGfriendlyZsh{}include \PYGfriendlyZdq{}diag/Trace.h\PYGfriendlyZdq{}}
\PYGfriendly{c+cp}{\PYGfriendlyZsh{}include \PYGfriendlyZdq{}lcd\PYGfriendlyZus{}stm32f0.h\PYGfriendlyZdq{}}

\PYGfriendly{c+cp}{\PYGfriendlyZsh{}define TRUE            1}
\PYGfriendly{c+cp}{\PYGfriendlyZsh{}define FALSE           0}

\PYGfriendly{c+cp}{\PYGfriendlyZsh{}define DEBOUNCE\PYGfriendlyZus{}MS     20}

\PYGfriendly{c+c1}{// == Type Definitions ==}

\PYGfriendly{c+c1}{// States the program could be in}
\PYGfriendly{k}{typedef} \PYGfriendly{k}{enum} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}INIT}\PYGfriendly{p}{,}
  \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}STOP}\PYGfriendly{p}{,}
  \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}COUNTING}\PYGfriendly{p}{,}
  \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}LAP}
\PYGfriendly{p}{\PYGfriendlyZcb{}} \PYGfriendly{n}{programState\PYGfriendlyZus{}t}\PYGfriendly{p}{;}

\PYGfriendly{c+c1}{// Types of things to display}
\PYGfriendly{k}{typedef} \PYGfriendly{k}{enum} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{n}{TIME}\PYGfriendly{p}{,}
  \PYGfriendly{n}{WELCOME}
\PYGfriendly{p}{\PYGfriendlyZcb{}} \PYGfriendly{n}{displayType\PYGfriendlyZus{}t}\PYGfriendly{p}{;}

\PYGfriendly{c+c1}{// == Global Variables ==}
\PYGfriendly{n}{programState\PYGfriendlyZus{}t} \PYGfriendly{n}{programState}\PYGfriendly{p}{;} \PYGfriendly{c+c1}{// To keep track of the program state throughout execution}
\PYGfriendly{k+kt}{uint32\PYGfriendlyZus{}t} \PYGfriendly{n}{timer} \PYGfriendly{o}{=} \PYGfriendly{l+m+mi}{0}\PYGfriendly{p}{;} \PYGfriendly{c+c1}{// ms Timer}
\PYGfriendly{k+kt}{uint32\PYGfriendlyZus{}t} \PYGfriendly{n}{lapValue} \PYGfriendly{o}{=} \PYGfriendly{l+m+mi}{0}\PYGfriendly{p}{;} \PYGfriendly{c+c1}{// Variable to store the lap time}

\PYGfriendly{c+c1}{// == Function Prototypes ==}
\PYGfriendly{k}{static} \PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{init\PYGfriendlyZus{}ports}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{void}\PYGfriendly{p}{);}
\PYGfriendly{k}{static} \PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{init\PYGfriendlyZus{}NVIC}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{void}\PYGfriendly{p}{);}
\PYGfriendly{k}{static} \PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{init\PYGfriendlyZus{}EXTI}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{void}\PYGfriendly{p}{);}
\PYGfriendly{k}{static} \PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{init\PYGfriendlyZus{}TIM14}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{void}\PYGfriendly{p}{);}

\PYGfriendly{k}{static} \PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{lcd\PYGfriendlyZus{}put2String}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{o}{*}\PYGfriendly{n}{string1}\PYGfriendly{p}{,} \PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{o}{*}\PYGfriendly{n}{string2}\PYGfriendly{p}{);}
\PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{delay}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{unsigned} \PYGfriendly{k+kt}{int} \PYGfriendly{n}{microseconds}\PYGfriendly{p}{);}

\PYGfriendly{k}{static} \PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{n+nf}{check\PYGfriendlyZus{}pb}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{n}{pb}\PYGfriendly{p}{);}
\PYGfriendly{k}{static} \PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{display}\PYGfriendly{p}{(}\PYGfriendly{n}{displayType\PYGfriendlyZus{}t} \PYGfriendly{n}{displayType}\PYGfriendly{p}{,} \PYGfriendly{k+kt}{uint32\PYGfriendlyZus{}t} \PYGfriendly{n}{value}\PYGfriendly{p}{);}
\PYGfriendly{k}{static} \PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{o}{*}\PYGfriendly{n+nf}{time2String}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{uint32\PYGfriendlyZus{}t} \PYGfriendly{n}{time}\PYGfriendly{p}{);}

\PYGfriendly{c+c1}{// == Program Code ==}
\PYGfriendly{k+kt}{int} \PYGfriendly{n+nf}{main}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{int} \PYGfriendly{n}{argc}\PYGfriendly{p}{,} \PYGfriendly{k+kt}{char}\PYGfriendly{o}{*} \PYGfriendly{n}{argv}\PYGfriendly{p}{[])} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{c+c1}{// Initialisations}
  \PYGfriendly{n}{programState} \PYGfriendly{o}{=} \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}INIT}\PYGfriendly{p}{;}

  \PYGfriendly{n}{init\PYGfriendlyZus{}LCD}\PYGfriendly{p}{();}
  \PYGfriendly{n}{init\PYGfriendlyZus{}ports}\PYGfriendly{p}{();}
  \PYGfriendly{n}{init\PYGfriendlyZus{}EXTI}\PYGfriendly{p}{();}
  \PYGfriendly{n}{init\PYGfriendlyZus{}NVIC}\PYGfriendly{p}{();}
  \PYGfriendly{n}{init\PYGfriendlyZus{}TIM14}\PYGfriendly{p}{();}

  \PYGfriendly{n}{programState} \PYGfriendly{o}{=} \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}STOP}\PYGfriendly{p}{;}

  \PYGfriendly{c+c1}{// Enable the timer}
  \PYGfriendly{n}{TIM14}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{CR1} \PYGfriendly{o}{|=} \PYGfriendly{l+m+mh}{0x1}\PYGfriendly{p}{;}

  \PYGfriendly{c+c1}{// Display the welcome message}
  \PYGfriendly{n}{display}\PYGfriendly{p}{(}\PYGfriendly{n}{WELCOME}\PYGfriendly{p}{,} \PYGfriendly{l+m+mi}{0}\PYGfriendly{p}{);}
  \PYGfriendly{n}{GPIOB}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{ODR} \PYGfriendly{o}{=} \PYGfriendly{p}{(}\PYGfriendly{l+m+mi}{1} \PYGfriendly{o}{\PYGfriendlyZlt{}\PYGfriendlyZlt{}} \PYGfriendly{l+m+mi}{3}\PYGfriendly{p}{);}

  \PYGfriendly{c+c1}{// Infinite loop}
  \PYGfriendly{k}{while} \PYGfriendly{p}{(}\PYGfriendly{l+m+mi}{1}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
    \PYGfriendly{k+kr}{\PYGfriendlyZus{}\PYGfriendlyZus{}asm}\PYGfriendly{p}{(}\PYGfriendly{l+s}{\PYGfriendlyZdq{}nop\PYGfriendlyZdq{}}\PYGfriendly{p}{);}
  \PYGfriendly{p}{\PYGfriendlyZcb{}}
\PYGfriendly{p}{\PYGfriendlyZcb{}}

\PYGfriendly{c+c1}{// == Function Definitions ==}

\PYGfriendly{c+cm}{/*}
\PYGfriendly{c+cm}{ * @brief Initialise the GPIO ports for pushbuttons, LEDs and the ADC}
\PYGfriendly{c+cm}{ * @params None}
\PYGfriendly{c+cm}{ * @retval None}
\PYGfriendly{c+cm}{ */}
\PYGfriendly{k}{static} \PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{init\PYGfriendlyZus{}ports}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{void}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{c+c1}{// Enable the clock for ports used}
  \PYGfriendly{n}{RCC}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{AHBENR} \PYGfriendly{o}{|=} \PYGfriendly{n}{RCC\PYGfriendlyZus{}AHBENR\PYGfriendlyZus{}GPIOBEN} \PYGfriendly{o}{|} \PYGfriendly{n}{RCC\PYGfriendlyZus{}AHBENR\PYGfriendlyZus{}GPIOAEN}\PYGfriendly{p}{;}

  \PYGfriendly{c+c1}{// Initialise PB0 \PYGfriendlyZhy{} PB7, PB10 and PB11 for RG Led}
  \PYGfriendly{n}{GPIOB}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{MODER} \PYGfriendly{o}{|=} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER0\PYGfriendlyZus{}0} \PYGfriendly{o}{|} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER1\PYGfriendlyZus{}0} \PYGfriendly{o}{|}
                  \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER2\PYGfriendlyZus{}0} \PYGfriendly{o}{|} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER3\PYGfriendlyZus{}0} \PYGfriendly{o}{|}
                  \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER4\PYGfriendlyZus{}0} \PYGfriendly{o}{|} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER5\PYGfriendlyZus{}0} \PYGfriendly{o}{|}
                  \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER6\PYGfriendlyZus{}0} \PYGfriendly{o}{|} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER7\PYGfriendlyZus{}0} \PYGfriendly{o}{|}
                  \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER10\PYGfriendlyZus{}0} \PYGfriendly{o}{|} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER11\PYGfriendlyZus{}0}\PYGfriendly{p}{;}
  \PYGfriendly{n}{GPIOB}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{ODR} \PYGfriendly{o}{\PYGfriendlyZam{}=} \PYGfriendly{o}{\PYGfriendlyZti{}}\PYGfriendly{p}{(}\PYGfriendly{n}{GPIO\PYGfriendlyZus{}ODR\PYGfriendlyZus{}10} \PYGfriendly{o}{|} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}ODR\PYGfriendlyZus{}11}\PYGfriendly{p}{);} \PYGfriendly{c+c1}{// Make sure they are not on}

  \PYGfriendly{c+c1}{// Initialise PA0, PA1, PA2 and PA3 for SW0, SW1, SW2 and SW3}
  \PYGfriendly{n}{GPIOA}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{MODER} \PYGfriendly{o}{\PYGfriendlyZam{}=} \PYGfriendly{o}{\PYGfriendlyZti{}}\PYGfriendly{p}{(}\PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER0} \PYGfriendly{o}{|} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER1} \PYGfriendly{o}{|} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER2}
      \PYGfriendly{o}{|} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER3}\PYGfriendly{p}{);}
  \PYGfriendly{n}{GPIOA}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{PUPDR} \PYGfriendly{o}{|=} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}PUPDR\PYGfriendlyZus{}PUPDR0\PYGfriendlyZus{}0} \PYGfriendly{o}{|} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}PUPDR\PYGfriendlyZus{}PUPDR1\PYGfriendlyZus{}0}
      \PYGfriendly{o}{|} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}PUPDR\PYGfriendlyZus{}PUPDR2\PYGfriendlyZus{}0} \PYGfriendly{o}{|} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}PUPDR\PYGfriendlyZus{}PUPDR3\PYGfriendlyZus{}0}\PYGfriendly{p}{;} \PYGfriendly{c+c1}{// Enable pullup resistors}

  \PYGfriendly{c+c1}{// Initialise PA5 for ADC1}
  \PYGfriendly{n}{GPIOA}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{MODER} \PYGfriendly{o}{|=} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}MODER\PYGfriendlyZus{}MODER5}\PYGfriendly{p}{;}
\PYGfriendly{p}{\PYGfriendlyZcb{}}

\PYGfriendly{c+cm}{/*}
\PYGfriendly{c+cm}{ * @brief Initialise the TIM14}
\PYGfriendly{c+cm}{ * @params None}
\PYGfriendly{c+cm}{ * @retval None}
\PYGfriendly{c+cm}{ */}
\PYGfriendly{k}{static} \PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{init\PYGfriendlyZus{}TIM14}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{void}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{c+c1}{// Enable the clock for TIM14}
  \PYGfriendly{n}{RCC}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{APB1ENR} \PYGfriendly{o}{|=} \PYGfriendly{n}{RCC\PYGfriendlyZus{}APB1ENR\PYGfriendlyZus{}TIM14EN}\PYGfriendly{p}{;}

  \PYGfriendly{c+c1}{// Set the frequency to 100Hz}
  \PYGfriendly{n}{TIM14}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{PSC} \PYGfriendly{o}{=} \PYGfriendly{l+m+mi}{48}\PYGfriendly{p}{;}
  \PYGfriendly{n}{TIM14}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{ARR} \PYGfriendly{o}{=} \PYGfriendly{l+m+mi}{10000}\PYGfriendly{p}{;}

  \PYGfriendly{c+c1}{// Enable the interrupt}
  \PYGfriendly{n}{TIM14}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{DIER} \PYGfriendly{o}{|=} \PYGfriendly{l+m+mh}{0x1}\PYGfriendly{p}{;} \PYGfriendly{c+c1}{// Enable the UIE (Update Interrupt Enable)}
  \PYGfriendly{n}{TIM14}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{CR1} \PYGfriendly{o}{\PYGfriendlyZam{}=} \PYGfriendly{o}{\PYGfriendlyZti{}}\PYGfriendly{p}{(}\PYGfriendly{l+m+mi}{1} \PYGfriendly{o}{\PYGfriendlyZlt{}\PYGfriendlyZlt{}} \PYGfriendly{l+m+mi}{2}\PYGfriendly{p}{);} \PYGfriendly{c+c1}{// Make sure the interrupt is not disabled in the Control Register 1}

  \PYGfriendly{c+c1}{// Make sure the counter is at zero}
  \PYGfriendly{n}{TIM14}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{CNT} \PYGfriendly{o}{=} \PYGfriendly{l+m+mi}{0}\PYGfriendly{p}{;}
\PYGfriendly{p}{\PYGfriendlyZcb{}}

\PYGfriendly{c+cm}{/*}
\PYGfriendly{c+cm}{ * @brief Initialise the NVIC for pushbutton interrupts}
\PYGfriendly{c+cm}{ * @params None}
\PYGfriendly{c+cm}{ * @retval None}
\PYGfriendly{c+cm}{ */}
\PYGfriendly{k}{static} \PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{init\PYGfriendlyZus{}NVIC}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{void}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{n}{NVIC\PYGfriendlyZus{}EnableIRQ}\PYGfriendly{p}{(}\PYGfriendly{n}{EXTI0\PYGfriendlyZus{}1\PYGfriendlyZus{}IRQn}\PYGfriendly{p}{);} \PYGfriendly{c+c1}{// For lines 0 and 1}
  \PYGfriendly{n}{NVIC\PYGfriendlyZus{}EnableIRQ}\PYGfriendly{p}{(}\PYGfriendly{n}{EXTI2\PYGfriendlyZus{}3\PYGfriendlyZus{}IRQn}\PYGfriendly{p}{);} \PYGfriendly{c+c1}{// For lines 2 and 3}
  \PYGfriendly{n}{NVIC\PYGfriendlyZus{}EnableIRQ}\PYGfriendly{p}{(}\PYGfriendly{n}{TIM14\PYGfriendlyZus{}IRQn}\PYGfriendly{p}{);} \PYGfriendly{c+c1}{// For TIM14}
\PYGfriendly{p}{\PYGfriendlyZcb{}}

\PYGfriendly{c+cm}{/*}
\PYGfriendly{c+cm}{ * @brief Initialise the EXTI lines for pushbutton interrupts}
\PYGfriendly{c+cm}{ * @params None}
\PYGfriendly{c+cm}{ * @retval None}
\PYGfriendly{c+cm}{ */}
\PYGfriendly{k}{static} \PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{init\PYGfriendlyZus{}EXTI}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{void}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{n}{RCC}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{APB2ENR} \PYGfriendly{o}{|=} \PYGfriendly{n}{RCC\PYGfriendlyZus{}APB2ENR\PYGfriendlyZus{}SYSCFGCOMPEN}\PYGfriendly{p}{;} \PYGfriendly{c+c1}{// Enable the SYSCFG and COMP RCC clock}
  \PYGfriendly{n}{SYSCFG}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{EXTICR}\PYGfriendly{p}{[}\PYGfriendly{l+m+mi}{1}\PYGfriendly{p}{]} \PYGfriendly{o}{\PYGfriendlyZam{}=} \PYGfriendly{o}{\PYGfriendlyZti{}}\PYGfriendly{p}{(}\PYGfriendly{l+m+mh}{0xFFFF}\PYGfriendly{p}{);} \PYGfriendly{c+c1}{// Map PA0 and PA1 to external interrupt lines}

  \PYGfriendly{n}{EXTI}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{FTSR} \PYGfriendly{o}{|=} \PYGfriendly{n}{EXTI\PYGfriendlyZus{}FTSR\PYGfriendlyZus{}TR0} \PYGfriendly{o}{|} \PYGfriendly{n}{EXTI\PYGfriendlyZus{}FTSR\PYGfriendlyZus{}TR1} \PYGfriendly{o}{|} \PYGfriendly{n}{EXTI\PYGfriendlyZus{}FTSR\PYGfriendlyZus{}TR2} \PYGfriendly{o}{|} \PYGfriendly{n}{EXTI\PYGfriendlyZus{}FTSR\PYGfriendlyZus{}TR3}\PYGfriendly{p}{;} \PYGfriendly{c+c1}{// Configure trigger to falling edge}
  \PYGfriendly{n}{EXTI}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{IMR} \PYGfriendly{o}{|=} \PYGfriendly{n}{EXTI\PYGfriendlyZus{}IMR\PYGfriendlyZus{}MR0} \PYGfriendly{o}{|} \PYGfriendly{n}{EXTI\PYGfriendlyZus{}IMR\PYGfriendlyZus{}MR1} \PYGfriendly{o}{|} \PYGfriendly{n}{EXTI\PYGfriendlyZus{}IMR\PYGfriendlyZus{}MR2} \PYGfriendly{o}{|} \PYGfriendly{n}{EXTI\PYGfriendlyZus{}IMR\PYGfriendlyZus{}MR3}\PYGfriendly{p}{;} \PYGfriendly{c+c1}{// Umask the interrupts}
\PYGfriendly{p}{\PYGfriendlyZcb{}}

\PYGfriendly{c+cm}{/*}
\PYGfriendly{c+cm}{ * @brief Rational addition of a safe 2 line write to the LCD}
\PYGfriendly{c+cm}{ * @params *string1: Pointer to the string to be written to line 1}
\PYGfriendly{c+cm}{ *         *string2: Pointer to the string to be written to line 2}
\PYGfriendly{c+cm}{ * @retval None}
\PYGfriendly{c+cm}{ */}
\PYGfriendly{k}{static} \PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{lcd\PYGfriendlyZus{}put2String}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{o}{*}\PYGfriendly{n}{string1}\PYGfriendly{p}{,} \PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{o}{*}\PYGfriendly{n}{string2}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{c+c1}{// Clear the LCD}
  \PYGfriendly{n}{lcd\PYGfriendlyZus{}command}\PYGfriendly{p}{(}\PYGfriendly{n}{CLEAR}\PYGfriendly{p}{);}

  \PYGfriendly{c+c1}{// Write the strings to the LCD}
  \PYGfriendly{n}{lcd\PYGfriendlyZus{}putstring}\PYGfriendly{p}{(}\PYGfriendly{n}{string1}\PYGfriendly{p}{);}
  \PYGfriendly{n}{lcd\PYGfriendlyZus{}command}\PYGfriendly{p}{(}\PYGfriendly{n}{LINE\PYGfriendlyZus{}TWO}\PYGfriendly{p}{);}
  \PYGfriendly{n}{lcd\PYGfriendlyZus{}putstring}\PYGfriendly{p}{(}\PYGfriendly{n}{string2}\PYGfriendly{p}{);}
\PYGfriendly{p}{\PYGfriendlyZcb{}}

\PYGfriendly{c+cm}{/*}
\PYGfriendly{c+cm}{ * @brief Get the state of the specified switch, with debouncing of predefined length}
\PYGfriendly{c+cm}{ * @params pb: Pushbutton number}
\PYGfriendly{c+cm}{ * @retval True or false when pressed and not pressed rsp.}
\PYGfriendly{c+cm}{ */}
\PYGfriendly{k}{static} \PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{n+nf}{check\PYGfriendlyZus{}pb}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{n}{pb}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{n}{pbBit}\PYGfriendly{p}{;}

  \PYGfriendly{c+c1}{// Check which PB needs to be checked}
  \PYGfriendly{k}{switch} \PYGfriendly{p}{(}\PYGfriendly{n}{pb}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{k}{case} \PYGfriendly{l+m+mi}{0}\PYGfriendly{o}{:}
    \PYGfriendly{n}{pbBit} \PYGfriendly{o}{=} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}IDR\PYGfriendlyZus{}0}\PYGfriendly{p}{;}
    \PYGfriendly{k}{break}\PYGfriendly{p}{;}
  \PYGfriendly{k}{case} \PYGfriendly{l+m+mi}{1}\PYGfriendly{o}{:}
    \PYGfriendly{n}{pbBit} \PYGfriendly{o}{=} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}IDR\PYGfriendlyZus{}1}\PYGfriendly{p}{;}
    \PYGfriendly{k}{break}\PYGfriendly{p}{;}
  \PYGfriendly{k}{case} \PYGfriendly{l+m+mi}{2}\PYGfriendly{o}{:}
    \PYGfriendly{n}{pbBit} \PYGfriendly{o}{=} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}IDR\PYGfriendlyZus{}2}\PYGfriendly{p}{;}
    \PYGfriendly{k}{break}\PYGfriendly{p}{;}
  \PYGfriendly{k}{case} \PYGfriendly{l+m+mi}{3}\PYGfriendly{o}{:}
    \PYGfriendly{n}{pbBit} \PYGfriendly{o}{=} \PYGfriendly{n}{GPIO\PYGfriendlyZus{}IDR\PYGfriendlyZus{}3}\PYGfriendly{p}{;}
    \PYGfriendly{k}{break}\PYGfriendly{p}{;}
  \PYGfriendly{k}{default}\PYGfriendly{o}{:}
    \PYGfriendly{k}{return} \PYGfriendly{n}{FALSE}\PYGfriendly{p}{;}
  \PYGfriendly{p}{\PYGfriendlyZcb{}}

  \PYGfriendly{c+c1}{// Debounce and check again \PYGfriendlyZhy{} return the result}
  \PYGfriendly{k}{if} \PYGfriendly{p}{(}\PYGfriendly{o}{!}\PYGfriendly{p}{(}\PYGfriendly{n}{GPIOA}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{IDR} \PYGfriendly{o}{\PYGfriendlyZam{}} \PYGfriendly{n}{pbBit}\PYGfriendly{p}{))} \PYGfriendly{p}{\PYGfriendlyZob{}}
    \PYGfriendly{n}{delay}\PYGfriendly{p}{(}\PYGfriendly{n}{DEBOUNCE\PYGfriendlyZus{}MS} \PYGfriendly{o}{*} \PYGfriendly{l+m+mi}{1000}\PYGfriendly{p}{);}
    \PYGfriendly{k}{if} \PYGfriendly{p}{(}\PYGfriendly{o}{!}\PYGfriendly{p}{(}\PYGfriendly{n}{GPIOA}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{IDR} \PYGfriendly{o}{\PYGfriendlyZam{}} \PYGfriendly{n}{pbBit}\PYGfriendly{p}{))} \PYGfriendly{p}{\PYGfriendlyZob{}}
      \PYGfriendly{k}{return} \PYGfriendly{n}{TRUE}\PYGfriendly{p}{;}
    \PYGfriendly{p}{\PYGfriendlyZcb{}} \PYGfriendly{k}{else} \PYGfriendly{p}{\PYGfriendlyZob{}}
      \PYGfriendly{k}{return} \PYGfriendly{n}{FALSE}\PYGfriendly{p}{;}
    \PYGfriendly{p}{\PYGfriendlyZcb{}}
  \PYGfriendly{p}{\PYGfriendlyZcb{}} \PYGfriendly{k}{else} \PYGfriendly{p}{\PYGfriendlyZob{}}
    \PYGfriendly{k}{return} \PYGfriendly{n}{FALSE}\PYGfriendly{p}{;}
  \PYGfriendly{p}{\PYGfriendlyZcb{}}
\PYGfriendly{p}{\PYGfriendlyZcb{}}

\PYGfriendly{c+cm}{/*}
\PYGfriendly{c+cm}{ * @brief Interrupt Request Handler for TIM14}
\PYGfriendly{c+cm}{ * @params None}
\PYGfriendly{c+cm}{ * @retval None}
\PYGfriendly{c+cm}{ */}
\PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{TIM14\PYGfriendlyZus{}IRQHandler}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{void}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{k}{if} \PYGfriendly{p}{(}\PYGfriendly{n}{programState} \PYGfriendly{o}{!=} \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}STOP}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
    \PYGfriendly{c+c1}{// If we are counting either in LAP mode or in COUNTING mode, increment the time}
    \PYGfriendly{n}{timer}\PYGfriendly{o}{++}\PYGfriendly{p}{;}
    \PYGfriendly{k}{if} \PYGfriendly{p}{(}\PYGfriendly{n}{programState} \PYGfriendly{o}{==} \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}COUNTING}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
      \PYGfriendly{c+c1}{// If we are in COUNTING mode, display the timer on the screen}
      \PYGfriendly{n}{display}\PYGfriendly{p}{(}\PYGfriendly{n}{TIME}\PYGfriendly{p}{,} \PYGfriendly{n}{timer}\PYGfriendly{p}{);}
    \PYGfriendly{p}{\PYGfriendlyZcb{}}
  \PYGfriendly{p}{\PYGfriendlyZcb{}}

  \PYGfriendly{c+c1}{// Clear the interrupt pending bit}
  \PYGfriendly{n}{TIM14}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{SR} \PYGfriendly{o}{\PYGfriendlyZam{}=} \PYGfriendly{o}{\PYGfriendlyZti{}}\PYGfriendly{p}{(}\PYGfriendly{l+m+mi}{1} \PYGfriendly{o}{\PYGfriendlyZlt{}\PYGfriendlyZlt{}} \PYGfriendly{l+m+mi}{0}\PYGfriendly{p}{);}
\PYGfriendly{p}{\PYGfriendlyZcb{}}

\PYGfriendly{c+cm}{/*}
\PYGfriendly{c+cm}{ * @brief Interrupt Request Handler for EXTI Lines 2 and 3 (PB0 and PB1)}
\PYGfriendly{c+cm}{ * @params None}
\PYGfriendly{c+cm}{ * @retval None}
\PYGfriendly{c+cm}{ */}
\PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{EXTI0\PYGfriendlyZus{}1\PYGfriendlyZus{}IRQHandler}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{void}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{k}{if} \PYGfriendly{p}{(}\PYGfriendly{n}{check\PYGfriendlyZus{}pb}\PYGfriendly{p}{(}\PYGfriendly{l+m+mi}{0}\PYGfriendly{p}{))} \PYGfriendly{p}{\PYGfriendlyZob{}}
    \PYGfriendly{k}{if} \PYGfriendly{p}{(}\PYGfriendly{n}{programState} \PYGfriendly{o}{==} \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}STOP} \PYGfriendly{o}{||} \PYGfriendly{n}{programState} \PYGfriendly{o}{==} \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}LAP}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
      \PYGfriendly{c+c1}{// Put the program into COUNTING mode and set the appropriate LED}
      \PYGfriendly{n}{display}\PYGfriendly{p}{(}\PYGfriendly{n}{TIME}\PYGfriendly{p}{,} \PYGfriendly{n}{timer}\PYGfriendly{p}{);}
      \PYGfriendly{n}{programState} \PYGfriendly{o}{=} \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}COUNTING}\PYGfriendly{p}{;}
      \PYGfriendly{n}{GPIOB}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{ODR} \PYGfriendly{o}{=} \PYGfriendly{p}{(}\PYGfriendly{l+m+mi}{1} \PYGfriendly{o}{\PYGfriendlyZlt{}\PYGfriendlyZlt{}} \PYGfriendly{l+m+mi}{0}\PYGfriendly{p}{);}
    \PYGfriendly{p}{\PYGfriendlyZcb{}}
  \PYGfriendly{p}{\PYGfriendlyZcb{}} \PYGfriendly{k}{else} \PYGfriendly{k}{if} \PYGfriendly{p}{(}\PYGfriendly{n}{check\PYGfriendlyZus{}pb}\PYGfriendly{p}{(}\PYGfriendly{l+m+mi}{1}\PYGfriendly{p}{))} \PYGfriendly{p}{\PYGfriendlyZob{}}
    \PYGfriendly{k}{if} \PYGfriendly{p}{(}\PYGfriendly{n}{programState} \PYGfriendly{o}{==} \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}COUNTING}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
      \PYGfriendly{c+c1}{// Update program state to LAP mode}
      \PYGfriendly{n}{programState} \PYGfriendly{o}{=} \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}LAP}\PYGfriendly{p}{;}

      \PYGfriendly{c+c1}{// Capture the lap time, display on the LCD and set the appropriate LED}
      \PYGfriendly{n}{lapValue} \PYGfriendly{o}{=} \PYGfriendly{n}{timer}\PYGfriendly{p}{;}
      \PYGfriendly{n}{display}\PYGfriendly{p}{(}\PYGfriendly{n}{TIME}\PYGfriendly{p}{,} \PYGfriendly{n}{timer}\PYGfriendly{p}{);}
      \PYGfriendly{n}{GPIOB}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{ODR} \PYGfriendly{o}{=} \PYGfriendly{p}{(}\PYGfriendly{l+m+mi}{1} \PYGfriendly{o}{\PYGfriendlyZlt{}\PYGfriendlyZlt{}} \PYGfriendly{l+m+mi}{1}\PYGfriendly{p}{);}
    \PYGfriendly{p}{\PYGfriendlyZcb{}}
  \PYGfriendly{p}{\PYGfriendlyZcb{}}

  \PYGfriendly{c+c1}{// Clear the interrupt pending bit}
  \PYGfriendly{n}{EXTI}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{PR} \PYGfriendly{o}{|=} \PYGfriendly{n}{EXTI\PYGfriendlyZus{}PR\PYGfriendlyZus{}PR0} \PYGfriendly{o}{|} \PYGfriendly{n}{EXTI\PYGfriendlyZus{}PR\PYGfriendlyZus{}PR1}\PYGfriendly{p}{;}
\PYGfriendly{p}{\PYGfriendlyZcb{}}

\PYGfriendly{c+cm}{/*}
\PYGfriendly{c+cm}{ * @brief Interrupt Request Handler for EXTI Lines 2 and 3 (PB2 and PB3)}
\PYGfriendly{c+cm}{ * @params None}
\PYGfriendly{c+cm}{ * @retval None}
\PYGfriendly{c+cm}{ */}
\PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{EXTI2\PYGfriendlyZus{}3\PYGfriendlyZus{}IRQHandler}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{void}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{k}{if} \PYGfriendly{p}{(}\PYGfriendly{n}{check\PYGfriendlyZus{}pb}\PYGfriendly{p}{(}\PYGfriendly{l+m+mi}{2}\PYGfriendly{p}{))} \PYGfriendly{p}{\PYGfriendlyZob{}}
    \PYGfriendly{k}{if} \PYGfriendly{p}{(}\PYGfriendly{n}{programState} \PYGfriendly{o}{==} \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}COUNTING}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
      \PYGfriendly{c+c1}{// Put the program into STOP mode and set the appropriate LED}
      \PYGfriendly{n}{programState} \PYGfriendly{o}{=} \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}STOP}\PYGfriendly{p}{;}
      \PYGfriendly{n}{GPIOB}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{ODR} \PYGfriendly{o}{=} \PYGfriendly{p}{(}\PYGfriendly{l+m+mi}{1} \PYGfriendly{o}{\PYGfriendlyZlt{}\PYGfriendlyZlt{}} \PYGfriendly{l+m+mi}{2}\PYGfriendly{p}{);}
    \PYGfriendly{p}{\PYGfriendlyZcb{}}
  \PYGfriendly{p}{\PYGfriendlyZcb{}} \PYGfriendly{k}{else} \PYGfriendly{k}{if} \PYGfriendly{p}{(}\PYGfriendly{n}{check\PYGfriendlyZus{}pb}\PYGfriendly{p}{(}\PYGfriendly{l+m+mi}{3}\PYGfriendly{p}{))} \PYGfriendly{p}{\PYGfriendlyZob{}}
    \PYGfriendly{c+c1}{// Zero the timer, update the program state, display the welcome screen and set the appropriate LED}
    \PYGfriendly{n}{timer} \PYGfriendly{o}{=} \PYGfriendly{l+m+mi}{0}\PYGfriendly{p}{;}
    \PYGfriendly{n}{programState} \PYGfriendly{o}{=} \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}STOP}\PYGfriendly{p}{;}
    \PYGfriendly{n}{display}\PYGfriendly{p}{(}\PYGfriendly{n}{WELCOME}\PYGfriendly{p}{,} \PYGfriendly{l+m+mi}{0}\PYGfriendly{p}{);}
    \PYGfriendly{n}{GPIOB}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{ODR} \PYGfriendly{o}{=} \PYGfriendly{p}{(}\PYGfriendly{l+m+mi}{1} \PYGfriendly{o}{\PYGfriendlyZlt{}\PYGfriendlyZlt{}} \PYGfriendly{l+m+mi}{3}\PYGfriendly{p}{);}
  \PYGfriendly{p}{\PYGfriendlyZcb{}}

  \PYGfriendly{c+c1}{// Clear the interrupt pending bit}
  \PYGfriendly{n}{EXTI}\PYGfriendly{o}{\PYGfriendlyZhy{}\PYGfriendlyZgt{}}\PYGfriendly{n}{PR} \PYGfriendly{o}{|=} \PYGfriendly{n}{EXTI\PYGfriendlyZus{}PR\PYGfriendlyZus{}PR2} \PYGfriendly{o}{|} \PYGfriendly{n}{EXTI\PYGfriendlyZus{}PR\PYGfriendlyZus{}PR3}\PYGfriendly{p}{;}
\PYGfriendly{p}{\PYGfriendlyZcb{}}


\PYGfriendly{c+cm}{/*}
\PYGfriendly{c+cm}{ * @brief Display the specified data on the screen}
\PYGfriendly{c+cm}{ * @params displayType: What to display on the screen}
\PYGfriendly{c+cm}{ *         value: Data to display for the given type}
\PYGfriendly{c+cm}{ * @retval None}
\PYGfriendly{c+cm}{ */}
\PYGfriendly{k+kt}{void} \PYGfriendly{n+nf}{display}\PYGfriendly{p}{(}\PYGfriendly{n}{displayType\PYGfriendlyZus{}t} \PYGfriendly{n}{displayType}\PYGfriendly{p}{,} \PYGfriendly{k+kt}{uint32\PYGfriendlyZus{}t} \PYGfriendly{n}{value}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{c+c1}{// Check for what we need to display}
  \PYGfriendly{k}{switch} \PYGfriendly{p}{(}\PYGfriendly{n}{displayType}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{k}{case} \PYGfriendly{n+nl}{TIME}\PYGfriendly{p}{:}
    \PYGfriendly{k}{if} \PYGfriendly{p}{(}\PYGfriendly{n}{programState} \PYGfriendly{o}{!=} \PYGfriendly{n}{PROG\PYGfriendlyZus{}STATE\PYGfriendlyZus{}COUNTING}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
      \PYGfriendly{c+c1}{// Only clear the screen if we know that the first line is going to change}
      \PYGfriendly{n}{lcd\PYGfriendlyZus{}command}\PYGfriendly{p}{(}\PYGfriendly{n}{CLEAR}\PYGfriendly{p}{);}
      \PYGfriendly{n}{lcd\PYGfriendlyZus{}putstring}\PYGfriendly{p}{(}\PYGfriendly{l+s}{\PYGfriendlyZdq{}Time\PYGfriendlyZdq{}}\PYGfriendly{p}{);}
    \PYGfriendly{p}{\PYGfriendlyZcb{}}

    \PYGfriendly{c+c1}{// Convert the time to the string format and display it on the LCD}
    \PYGfriendly{n}{lcd\PYGfriendlyZus{}command}\PYGfriendly{p}{(}\PYGfriendly{n}{LINE\PYGfriendlyZus{}TWO}\PYGfriendly{p}{);}
    \PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{o}{*}\PYGfriendly{n}{string} \PYGfriendly{o}{=} \PYGfriendly{n}{time2String}\PYGfriendly{p}{(}\PYGfriendly{n}{value}\PYGfriendly{p}{);}
    \PYGfriendly{n}{lcd\PYGfriendlyZus{}putstring}\PYGfriendly{p}{(}\PYGfriendly{n}{string}\PYGfriendly{p}{);}
    \PYGfriendly{n}{free}\PYGfriendly{p}{(}\PYGfriendly{n}{string}\PYGfriendly{p}{);} \PYGfriendly{c+c1}{// Make sure we de\PYGfriendlyZhy{}allocate the string!}
    \PYGfriendly{k}{break}\PYGfriendly{p}{;}
  \PYGfriendly{k}{case} \PYGfriendly{n+nl}{WELCOME}\PYGfriendly{p}{:}
    \PYGfriendly{c+c1}{// Display the welcome message}
    \PYGfriendly{n}{lcd\PYGfriendlyZus{}put2String}\PYGfriendly{p}{(}\PYGfriendly{l+s}{\PYGfriendlyZdq{}Stop Watch\PYGfriendlyZdq{}}\PYGfriendly{p}{,} \PYGfriendly{l+s}{\PYGfriendlyZdq{}Press SW0...\PYGfriendlyZdq{}}\PYGfriendly{p}{);}
    \PYGfriendly{k}{break}\PYGfriendly{p}{;}
  \PYGfriendly{k}{default}\PYGfriendly{o}{:}
    \PYGfriendly{k}{break}\PYGfriendly{p}{;}
  \PYGfriendly{p}{\PYGfriendlyZcb{}}
\PYGfriendly{p}{\PYGfriendlyZcb{}}

\PYGfriendly{c+cm}{/*}
\PYGfriendly{c+cm}{ * @brief Convert the time from ms into a displayable string}
\PYGfriendly{c+cm}{ * @params time: The time in ms}
\PYGfriendly{c+cm}{ * @retval Pointer to a string}
\PYGfriendly{c+cm}{ * @Note: The string must be deallocated after use}
\PYGfriendly{c+cm}{ */}
\PYGfriendly{k}{static} \PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{o}{*}\PYGfriendly{n+nf}{time2String}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{uint32\PYGfriendlyZus{}t} \PYGfriendly{n}{time}\PYGfriendly{p}{)} \PYGfriendly{p}{\PYGfriendlyZob{}}
  \PYGfriendly{k+kt}{uint32\PYGfriendlyZus{}t} \PYGfriendly{n}{timeVal} \PYGfriendly{o}{=} \PYGfriendly{n}{time}\PYGfriendly{p}{;}
  \PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{o}{*}\PYGfriendly{n}{string}\PYGfriendly{p}{;}
  \PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{n}{strLength} \PYGfriendly{o}{=} \PYGfriendly{l+m+mi}{9}\PYGfriendly{o}{*}\PYGfriendly{k}{sizeof}\PYGfriendly{p}{(}\PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t}\PYGfriendly{p}{);} \PYGfriendly{c+c1}{// Calculate the string length}
  \PYGfriendly{n}{string} \PYGfriendly{o}{=} \PYGfriendly{n}{malloc}\PYGfriendly{p}{(}\PYGfriendly{n}{strLength}\PYGfriendly{p}{);} \PYGfriendly{c+c1}{// Allocate the correct amount of memory for the string}

  \PYGfriendly{c+c1}{// Extract the minutes, seconds and milliseconds}
  \PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{n}{minutes} \PYGfriendly{o}{=} \PYGfriendly{n}{timeVal}\PYGfriendly{o}{/}\PYGfriendly{l+m+mi}{6000}\PYGfriendly{p}{;}
  \PYGfriendly{n}{timeVal} \PYGfriendly{o}{\PYGfriendlyZhy{}=} \PYGfriendly{n}{minutes}\PYGfriendly{o}{*}\PYGfriendly{l+m+mi}{6000}\PYGfriendly{p}{;}

  \PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{n}{seconds} \PYGfriendly{o}{=} \PYGfriendly{n}{timeVal}\PYGfriendly{o}{/}\PYGfriendly{l+m+mi}{100}\PYGfriendly{p}{;}
  \PYGfriendly{n}{timeVal} \PYGfriendly{o}{\PYGfriendlyZhy{}=} \PYGfriendly{n}{seconds}\PYGfriendly{o}{*}\PYGfriendly{l+m+mi}{100}\PYGfriendly{p}{;}

  \PYGfriendly{k+kt}{uint8\PYGfriendlyZus{}t} \PYGfriendly{n}{ms} \PYGfriendly{o}{=} \PYGfriendly{n}{timeVal}\PYGfriendly{p}{;}

  \PYGfriendly{c+c1}{// Format the output string}
  \PYGfriendly{n}{sprintf}\PYGfriendly{p}{(}\PYGfriendly{n}{string}\PYGfriendly{p}{,} \PYGfriendly{l+s}{\PYGfriendlyZdq{}\PYGfriendlyZpc{}02d:\PYGfriendlyZpc{}02d.\PYGfriendlyZpc{}02d}\PYGfriendly{l+s+se}{\PYGfriendlyZbs{}0}\PYGfriendly{l+s}{\PYGfriendlyZdq{}}\PYGfriendly{p}{,} \PYGfriendly{n}{minutes}\PYGfriendly{p}{,} \PYGfriendly{n}{seconds}\PYGfriendly{p}{,} \PYGfriendly{n}{ms}\PYGfriendly{p}{);}

  \PYGfriendly{c+c1}{// Return a pointer to the string}
  \PYGfriendly{k}{return} \PYGfriendly{n}{string}\PYGfriendly{p}{;}
\PYGfriendly{p}{\PYGfriendlyZcb{}}

\PYGfriendly{c+c1}{// \PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}\PYGfriendlyZhy{}}
\end{Verbatim}
